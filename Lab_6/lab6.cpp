/*************************************************************
	Практическое занятие №6. Структуры
//динамический массив структур
//поиск
//сортировка
//сохранение в файле
//чтение из файла
*************************************************************/
#define _CRT_SECURE_NO_WARNINGS

#define	  stop __asm nop	
#include <iostream>
#include <tchar.h>
#include <cstdio>

#include "Book.h"
#include "Functions.h"

int KolichestvoKnig = 5;
BOOK * pBook = new BOOK[KolichestvoKnig];

void main()
{
	setlocale(LC_ALL, "Russian");
	//Используйте структуру BOOK, созданную в предыдущей работе.
	//Для этого достаточно переписать и подключить к проекту файлы
	//book.h и book.cpp
	

	//Упрощения:
	//1. пусть автор и заглавие книги состоят из одного слова
	//2. все строки можно задавать латинскими буквами. Если хочется
	//   не только выводить, но и вводить русские символы, следует
	//   а) пользоваться расширенными функциями ввода/вывода - wprintf(), wscanf()
	//   б) хранить строки как расширенные - wchar_t
	//   в) установить кодировку - setlocale(LC_CTYPE, ".866");


	//Задание 1. Создаем «картотеку».
	//«Картотека» - это массив структур => нужно такой массив создать.
	//Замечание: размер массива придется увеличиватьпо мере добавления книг =>
	//каким должен быть такой массив???


	BOOK book0 = { 120.0, 1999, "Matematika", "Ivanov", eCategory::Nauka };
	BOOK book1 = { 150.0, 2005, "Russkiy_Yazyk", "Petrov", eCategory::Lingvistika };
	BOOK book2 = { 220.0, 2015, "Gore_ot_uma", "Griboedov", eCategory::Proza };
	BOOK book3 = { 80.0, 1985, "Pamyatnik", "Pushkin", eCategory::Poesiya };
	BOOK book4 = { 330.0, 2013, "Vsadnik_bez_golovy", "Rid", eCategory::Hudozhestvennaya };

	pBook[0] = book0;
	pBook[1] = book1;
	pBook[2] = book2;
	pBook[3] = book3;
	pBook[4] = book4;

	//Пользователь должен иметь возможность по своему желанию выполнять
	//разные действия с картотекой => нужно такую возможность ему
	//предоставить: это может выглядеть как вывод "меню" (перечень
	//возможных действий и соответствующих реакций пользователя), например:
	//Распечатать содержимое картотеки (1)
	//Ввести новую книгу (2)
	//Удалить существующую(ие) (3)
	//Записать текущее содержимое картотеки в файл (4)
	//Считать из файла содержимое в картотеку (5)
	//...
	//Выход из программы (...)


	//Реализуйте посредством функций разные возможности работы с картотекой




	//Подсказка: для файлового ввода/вывода используйте функции fprintf и fscanf
	//(заголовочный файл <cstdio>
	while (Menu());


	




	//****************************************************************
	//Задание 2. Предоставьте пользователю возможность выводить перечень книг
	//в определенном порядке => напишите функцию (функции) сортировки массива
	//по любому из полей структуры.
	//Замечание: признак - "по какому полю сортируем" можно ввести с помощью
	//перечисления.


	system("pause");
}