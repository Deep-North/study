
/*************************************************************
	Практическое занятие №4. Функции.
	Объявление, определение, вызов.
	Передача параметров. Возвращение значения.
	Указатели на функции
*************************************************************/
#include <iostream>
#include <tchar.h>
#include <time.h>
#include <cstdio>  //раскомментировал для задания 7.Б
#include <cstdarg> //раскомментировал для задания 7.Б
#include "other.h"

//Обявление собственных функций
#include "functions.h"

#define	  stop __asm nop

int _tmain()
{
	setlocale(LC_ALL, "Russian");
	{
		/////////////////////////////////////////////////////////////////////////////
		// Задание 1. Ссылки.
		//Объявите ссылку на тип double. Посредством ссылки измените значение
		std::cout << "====================================================================Задание 1.\n\n";
		double dD1 = 10.123;
		double& r1 = dD1;
		r1++;
		std::cout << dD1;

		//Раскомментируйте две следующих строчки. Что следует сделать, чтобы
		//linker не выдавал ошибки при создании exe-файла Подсказка: ссылка ref
		//должна быть внешней

		extern int& ref;


		//Раскомментируйте следующую строку. Что следует сделать, чтобы
		//компилятор не выдавал ошибки 
		const int& ref1 = 1;//компилятор выделяет память (sizeof(int)), заносит туда единицу, а адрес такой фиктивной
							//переменной сохраняет в ссылке ref1


		//Задан указатель:
		char c = 'A';
		char* pc = &c;
		//Объявите ссылку на указатель. Посредством ссылки измените
		//а) значение по адресу
		//б) сам адрес
		char*& refP = pc;
		*refP = 'F';
		refP++;
		std::cout << '\n' << c << " " << pc << " " << refP << '\n';

		stop
	}

	{
		//Задание 2. Отличия при передаче параметров а) по значению,
		// б) по ссылке, в) по указателю
		//Объявите и определите три функции , которые увеличивают заданное
		//с помощью параметра значение на 1 ( а) - IncByValue(),
		// б) - IncByPointer(), в) - IncByReference() ). 
		//Проверьте правильность с помощью отладчика.
		//
		//Замечание: объявления функций принято помещать в заголовочный файл
		std::cout << "====================================================================\n\nЗадание 2.\n\n";
		int val = 1;//значение этой переменной должно быть увеличено с помощью
					//каждой из функций на единицу
		std::cout << val << '\n';

		IncByValue(val);
		std::cout << val << '\n';

		int & r = val;
		IncByReference(r);
		std::cout << val << '\n';

		int * p = &val;
		IncByPointer(p);
		std::cout << val << '\n';
		stop
	}
	{
		//Задание 2а. Передача параметров c помощью указателя и по ссылке. 
		//Перегруженные имена функций.
		//Создайте функцию (функции) Swap(), которая меняет значения
		//переменных nX и nY местами. 
		// а)Функция должна принимать два указателя на int, оперируя с 
		//которыми менять значения переменных в вызывающей программе
		// б)Функция должна принимать две ссылки на int 
		//Проверьте правильность с помощью приведенного ниже фрагмента.
		std::cout << "====================================================================\n\nЗадание 2A.\n\n";

		int	nX = 1;
		int nY = -1;
		int * px = &nX;
		int * py = &nY;
		int & rx = nX;
		int & ry = nY;
		std::cout << nX << " " << nY << '\n';
		Swap(px, py);	//поменяли местами значения nX и nY с помощью указателей на nX и nY
		std::cout << nX << " " << nY << '\n';
		Swap(rx, ry);	//а теперь обратно с помощью ссылок на nX и nY
		std::cout << nX << " " << nY << '\n';
		stop
	}
	{
		//Задание 3. Указатели на массивы в качестве аргументов.
		//3a.Напишите два варианта функции поиска минимального элемента
		std::cout << "====================================================================\n\nЗадание 3A.\n\n";
		//1. во встроенном двухмерном массиве
		//2. в динамическом двухмерном массиве (обе размерности вычисляются)

		//1.Например:
		std::cout << "\nВстроенный массив:\n\n";
		const int N=10, M=10;

		srand(time(0));
		int ars[N][M];
		for (int i = 0; i < N; i++)
		{
			for (int j = 0; j < M; j++)
			{
				ars[i][j] = rand();
				std::cout << ars[i][j] << ' ';
			}
			std::cout << '\n';
		}
		
		int res1 = Min(&ars[0][0], N, M);
		std::cout << "\n\n" << "Минимальное значение: " << res1 << '\n';
		//===============================================================

		std::cout << "\nДинамический массив:\n\n";
		int** ard = new int*[N];
		for (int i = 0; i < N; i++) {
			ard[i] = new int[M];
			for (int j = 0; j < M; j++) {
				ard[i][j] = rand();
				std::cout << ard[i][j] << ' ';
			}
			std::cout << '\n';
		}

		int res2 = Min(ard, N, M);
		std::cout << "\n\n" << "Минимальное значение: " << res2 << '\n';

		//Освобождаем память
		for (int i = 0; i < N; i++) delete[] ard[i];
		delete[] ard;
		stop
	}

	{
		//3b. Напишите функцию сравнения двух строк - MyStrCmp():
		//Функция должна принимать два указателя на сравниваемые
		//строки (возможно Вы должны указать компилятору, что функция
		//не имеет права модифицировать содержимое строк)
		//Функция должна возвращать отрицательное значение, если
		//первая строка лексиграфически меньше второй, 0 - если
		//они равны и положительное значение, если первая строка
		//больше второй.
		//Вспомните, что признаком конца строки является нулевой байт.
		std::cout << "====================================================================\n\nЗадание 3Б.\n\n";

		//Создайте две строки для сравнения: 
		const char *s1 = "asdfghj";
		const char *s2 = "qwert";
		//Вызовите функцию сравнения
		int rez = MyStrCmp(s1, s2);
		//Выведите результат сравнения с помощью cout:
		std::cout << rez;
		stop
	}

	{
		//Задание 4.Ссылки в качестве параметров. Передача указателя на встроенный
		//массив в качестве параметра функции.
		//Напишите две взаимодополняющие друг друга функции:
		//1.  ... DayOfYear(...)
		//- преобразует день месяца (число,месяц и год задаются в качестве параметров)
		//в порядковый день года(возвращаемое значение)
		//2. ... DayOfMonth(...) - функция преобразует порядковый день года в день месяца
		// (принимает год и порядковый день года в качестве параметров и должна сформировать
		// день месяца и номер месяца и каким-то образом сообщить эти значения вызывающей процедуре)

		//Проверьте работоспособность обеих функций с помощью следующего фрагмента:


		//В процессе вычислений Вам придется учитывать "високосный - невисокосный" год.
		//Для этого предлагается в каждую функцию в качестве одного из параметров передавать
		//данные приведенного ниже двухмерного массива nDayTab
		std::cout << "====================================================================\n\nЗадание 4.\n\n";
		int nDayTab[2][12] = {
			{31,28,31,30,31,30,31,31,30,31,30,31}, //невисокосный год
			{31,29,31,30,31,30,31,31,30,31,30,31} };	//високосный год
		int DM[2] = {0, 0}; //переменная-массив для возврата дня и месяца из функции DayOfMonth

		int day_of_month = 20;
		int month_of_year = 11;
		int year = 2001;

		int day_of_year=325;

		//Вызов функции DayOfYear
		int x = DayOfYear(day_of_month, month_of_year, year, nDayTab);
		std::cout << "Заданный день является " << x <<"-м днем в году"<<'\n';

		//Проверка результата обратной функцией DayOfMonth
		DayOfMonth(year, day_of_year, nDayTab, DM);
		std::cout << "Заданное число является " << DM[0] << "-м днем " << DM[1] << " месяца" << '\n';
		stop
	}

	{
		//Задание 5. Создайте одномерный массив (размерность вычисляется в процессе
		//выполнения программы), заполните его значениями.
		//Напишите функцию, которая добавляет в массив ервре значение только при
		//условии, что такого значения в массиве еще нет. Подсказка: при этом размер
		//массива должен увеличиться! Функция НЕ ДОЛЖНА ничего возвращать.
		std::cout << "====================================================================\n\nЗадание 5.\n\n";
		//Для проверки напишите функцию, которая выводит значения всех элементов на экран

		int n;
		//std::cout << "Введите размер массива: ";
		//std::cin >> n;
		std::cout << "Размер массива 8 элементов ";
		n = 8;
		srand(time(0));
		int* pn = new int[n];
		for (int i = 0; i < n; i++)//Заполним массив случайными значениями и выведем его сразу
		{
			pn[i]= (rand() % 10);
			std::cout << pn[i] << ' ';
		}

		SymbolAddition(pn, n);

		//Вывод массива для проверки
		std::cout << '\n';
		for (int i = 0; i < n; i++)
		{
			std::cout << pn[i] <<' ';
		}
		std::cout << '\n';

		stop
	}

	{
		//Задание 6. Рекурсивные функции. Напишите рекурсивную функцию вычисления
		//суммы первых N натуральных чисел.
		std::cout << "====================================================================\n\nЗадание 6.\n\n";
		std::cout << "Введите натуральное число: ";
		int n, Sum;
		std::cin >> n;
		Sum = RecursiveSum(n);
		std::cout << "\n" << Sum << "\n";
		stop
	}

	{
		// Задание 7а. Функции с переменным числом параметров.
		// Напишите функцию (дана заготовка VarArgs, не использующая
		// макросы), которая принимает переменное число аргументов
		// типа int и выводит на печать число принятых параметров и
		// их значения.
		// Признаком конца списка является нулевое значение.
		std::cout << "====================================================================\n\nЗадание 7.A\n\n";
		int nN1 = 5, nN2 = 11, nN3 = 4, nN4 = 7, nN5 = -1;
		VarArgs(nN1, 0);
		VarArgs(nN1, nN2, 0);
		VarArgs(nN1, nN2, nN3, nN4, nN5, 0);
		stop

		//Задание 7б. Модифицируйте функцию 5а с помощью макросов
		// va_start, va_arg, va_end
		std::cout << "====================================================================\n\nЗадание 7.Б\n\n";
		VarArgsStd(nN1, 0);
		VarArgsStd(nN1, nN2, 0);
		VarArgsStd(nN1, nN2, nN3, nN4, nN5, 0);

		stop
	}

	{
		// Задание 8. Возвращение адреса.
		// Напишите функцию, которая находит минимальное значение в массиве,
		// таким образом, чтобы ее вызов можно было использовать слева от знака 
		// равенства: *MyMin(параметры) = 0;
		std::cout << "====================================================================\n\nЗадание 8.\n\n";
		int mass[] = {12, 24, 77, -23, 1, 4, -13, -4, 15};
		int* pMin = MyMin(mass, sizeof(mass)/sizeof(mass[0]));
		std::cout << "Минимальное значение массива было: " << *pMin << "\n" << "Оно заменено на 666" << "\n";
		*MyMin(mass, sizeof(mass) / sizeof(mass[0])) = 666;
				
		for (int i = 0; i < sizeof(mass)/sizeof(mass[0]); i++)
		{
			std::cout << mass[i] << ' ';
		}
		
		stop
	}
	return 0;
}//main

